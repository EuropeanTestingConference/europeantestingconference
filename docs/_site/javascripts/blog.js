// Generated by CoffeeScript 1.10.0
(function() {
  var addBodyToElement, addFooterToBlog, addLinkTo, addTitleToElement, alternateLink, populateBlogs, populateLatestBlog, populateRestLinks;

  alternateLink = function(blogEntry) {
    var j, len, link, ref;
    ref = blogEntry.link;
    for (j = 0, len = ref.length; j < len; j++) {
      link = ref[j];
      if (link.rel === 'alternate') {
        link;
      }
    }
    return link;
  };

  populateLatestBlog = function(latestBlog) {
    var element;
    element = $('#blog-latest');
    addTitleToElement(element.find('h3'), latestBlog);
    addBodyToElement(element.find('section'), latestBlog);
    return addFooterToBlog(element.find('footer'), latestBlog);
  };

  addTitleToElement = function(element, latestBlog) {
    var blogEntry, h3element;
    blogEntry = alternateLink(latestBlog);
    h3element = document.createElement('a');
    $(h3element).attr('href', blogEntry.href);
    $(h3element).attr('target', '_blank');
    $(h3element).text(blogEntry.title);
    return element.append(h3element);
  };

  addBodyToElement = function(element, blogEntry) {
    var blog_paragraphs, content, excerpt, fn, item, j, len;
    content = blogEntry.content.$t;
    excerpt = content.replace(/<a[^>]+><(img|div)[^>]*\/?><\/a>/ig, "").replace(/<br[^>]*\/?>/ig, "\n").replace(/<(img|div)[^>]*\/?>/ig, "").substr(0, 500);
    blog_paragraphs = excerpt.split('\n');
    fn = (function(_this) {
      return function() {
        if (item !== "") {
          return element.append("<p>" + item + "</p>");
        }
      };
    })(this);
    for (j = 0, len = blog_paragraphs.length; j < len; j++) {
      item = blog_paragraphs[j];
      fn();
    }
    return element.append("<p><a target='_blank'  href='" + (alternateLink(blogEntry).href) + "'>... read more</a></p>");
  };

  addFooterToBlog = function(element, blogEntry) {
    var published_on;
    published_on = blogEntry.published.$t.substr(0, 10);
    return element.append("<span class='published-on' >Published on " + published_on + " </span>");
  };

  populateRestLinks = function(blogEntries) {
    var i, j, results, ulElement;
    ulElement = $('#blog-rest');
    console.log(blogEntries);
    results = [];
    for (i = j = 1; j <= 6; i = ++j) {
      results.push((function(_this) {
        return function() {
          console.log(blogEntries.entry.length);
          if (i <= blogEntries.entry.length) {
            return addLinkTo(ulElement, blogEntries.entry[i]);
          }
        };
      })(this)());
    }
    return results;
  };

  addLinkTo = function(element, blogEntry) {
    var liElement, linkToBlog;
    linkToBlog = alternateLink(blogEntry);
    liElement = document.createElement('li');
    $(liElement).append("<a target='_blank'  href='" + linkToBlog.href + "'>" + linkToBlog.title + "</a><span class='published-on' >published on: " + (blogEntry.published.$t.substr(0, 10)) + "</span>");
    return element.append(liElement);
  };

  populateBlogs = function(jsonData) {
    var latestBlog;
    latestBlog = jsonData.feed.entry[0];
    $('#blog-container').removeClass('hidden');
    populateLatestBlog(latestBlog);
    return populateRestLinks(jsonData.feed);
  };

  $(function() {
    var link, options;
    link = $('#blog-container').data('resource');
    options = {
      url: link + "&callback=?",
      type: 'GET',
      success: populateBlogs
    };
    if (link !== void 0) {
      return $.getJSON(options.url, options.success);
    }
  });

}).call(this);
